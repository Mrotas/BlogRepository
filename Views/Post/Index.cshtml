@model IEnumerable<BlogRepository.DataAccess.Collection.Post>

@{
    ViewData["Title"] = "Index";
}

<!-- Page Content -->
<div class="container">

    <div class="row">

        <!-- Blog Entries Column -->
        <div class="col-md-8">

            <h1 class="my-4">
                Ostatnio dodane...
            </h1>

            @foreach (var post in Model.Take(10))
            {
                <!-- Blog Post -->
                <div class="card mb-4">
                    <img class="card-img-top" src="http://placehold.it/750x300" alt="Card image cap">
                    <div class="card-body">
                        <h2 class="card-title">@post.Title</h2>
                        @{var postPreview = String.Join("", (post.Content.Length >= 500 ? post.Content.Take(500) : post.Content).ToArray()) + "..."; }
                        <p class="card-text">@postPreview</p>
                        <a href="~/Post/ViewPost?postId=@post.Id" class="btn btn-primary">Więcej &rarr;</a>
                    </div>
                    <div class="card-footer text-muted">
                        Dodano @post.Created
                    </div>
                </div>
            }

            <!-- Pagination -->
            <ul class="pagination justify-content-center mb-4">
                <li class="page-item disabled">
                    <a class="page-link" href="#">&larr; Starsze</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="#">Nowsze &rarr;</a>
                </li>
            </ul>

        </div>

        <!-- Sidebar Widgets Column -->
        <div class="col-md-4">

            <!-- Search Widget -->
            <div class="card my-4">
                <h5 class="card-header">Szukaj</h5>
                <div class="card-body">
                    <form action="~/Post/Search">
                        <div class="input-group">
                            <input name="searchString" type="text" class="form-control" placeholder="Np. MongoDB">
                            <span class="input-group-append">
                                <button class="btn btn-secondary" type="submit">Szukaj!</button>
                            </span>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Categories Widget -->
            <div class="card my-4">
                <h5 class="card-header">Najpopularniejsze kategorie</h5>
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-12">
                            <ul class="list-unstyled mb-0" style="columns: 2; -webkit-columns: 2; -moz-columns: 2;">
                                @{
                                    var tagsList = Model.Select(x => x.Tags).ToList();
                                    var tagNumberPostsPairs = new List<KeyValuePair<string, int>>();
                                    foreach (var tagList in tagsList)
                                    {
                                        var tags = tagList.Split(new char[] { ',', ';' }).Where(tag => !String.IsNullOrWhiteSpace(tag)).Select(x => x.Trim()).ToList();
                                        foreach (var tag in tags)
                                        {
                                            KeyValuePair<string, int> tagNumberPostsPair = tagNumberPostsPairs.FirstOrDefault(x => x.Key == tag);
                                            if (!tagNumberPostsPair.Equals(default(KeyValuePair<string, int>)))
                                            {
                                                tagNumberPostsPairs.Remove(tagNumberPostsPair);
                                                tagNumberPostsPairs.Add(new KeyValuePair<string, int>(tag, tagNumberPostsPair.Value + 1));
                                            }
                                            else
                                            {
                                                tagNumberPostsPairs.Add(new KeyValuePair<string, int>(tag, 1));
                                            }
                                        }
                                    }

                                    foreach (string tag in tagNumberPostsPairs.OrderByDescending(x => x.Value).Take(6).Select(x => x.Key))
                                    {
                                        <li>
                                            <a href="~/Post/ViewByTag?tag=@tag">@tag</a>
                                        </li>
                                    }                                    
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Side Widget -->
            <div class="card my-4">
                <h5 class="card-header">Najczęściej oglądane posty</h5>
                <div class="card-body">
                    <ol style="margin-bottom:0px">
                        @foreach (var post in Model.OrderByDescending(x => x.Views).Take(5))
                        {
                            <li>
                                <a href="~/Post/ViewPost?postId=@post.Id">@post.Title</a> - @post.Views wyświetleń
                            </li>
                        }
                    </ol>
                </div>
            </div>

        </div>

    </div>
    <!-- /.row -->

</div>
<!-- /.container -->